type Query {
  listBusinessEntities: [BusinessEntity!]!
  businessEntity(businessEntityId: String!): BusinessEntity!
  listGames: [Game!]!
  game(gameId: String!): Game!
  isNameAvailable(type: String!, name: String!): Boolean!
  listPlatforms: [Platform!]!
  platform(platformId: String!): Platform!
  testEntity(id: String!): TestEntity!
  anotherTestEntity: TestEntity!
}

type BusinessEntity {
  id: String!
  name: String!
}

type Game {
  id: String!
  name: String!
  sortName: String!
}

type Platform {
  id: String!
  name: String!
}

type TestEntity {
  id: String!
}

type Mutation {
  createBusinessEntity(name: String!): BusinessEntity!
  createGame(name: String!): Game!
  updateGame(data: GameUpdate!, id: String!): Game!
  createPlatform(name: String!): Platform!
}

input GameUpdate {
  name: String!
}
